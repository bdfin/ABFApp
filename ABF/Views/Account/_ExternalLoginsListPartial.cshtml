@model ABF.Models.ExternalLoginListViewModel
@using Microsoft.Owin.Security

<h4>Log in with:</h4>
<hr />
@{
    var loginProviders = Context.GetOwinContext().Authentication.GetExternalAuthenticationTypes();
    if (loginProviders.Count() == 0)
    {
        <div>
            <p>
                There are no external authentication services configured. See <a href="https://go.microsoft.com/fwlink/?LinkId=403804">this article</a>
                for details on setting up this ASP.NET application to support logging in via external services.
            </p>
        </div>
    }
    else
    {
        using (Html.BeginForm("ExternalLogin", "Account", new { ReturnUrl = Model.ReturnUrl }))
        {
            @Html.AntiForgeryToken()

            <div id="socialLoginList">
                @foreach (AuthenticationDescription p in loginProviders)
                {

                    if (p.Caption == "Google")
                    {
                        <button type="submit" class="btn btn-info btn-block" id="@p.AuthenticationType" name="provider" value="@p.AuthenticationType" title="Log in using your @p.Caption account"><i class='fab fa-google'></i> @p.AuthenticationType</button>
                    }
                    if (p.Caption == "Facebook")
                    {
                        <button type="submit" class="btn btn-info btn-block" id="@p.AuthenticationType" name="provider" value="@p.AuthenticationType" title="Log in using your @p.Caption account"><i class='fab fa-facebook'></i> @p.AuthenticationType</button>
                    }
                    if (p.Caption == "Microsoft")
                    {
                        <button type="submit" class="btn btn-info btn-block" id="@p.AuthenticationType" name="provider" value="@p.AuthenticationType" title="Log in using your @p.Caption account"><i class="fab fa-microsoft"></i> @p.AuthenticationType</button>
                    }
                }
            </div>
        }
    }
}
